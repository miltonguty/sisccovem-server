generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["views"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Sections {
  secId          Int        @id @default(autoincrement())
  secKey         String     @unique(map: "secKey_UNIQUE") @db.VarChar(36)
  secCreatedAt   DateTime   @default(now()) @db.DateTime(0)
  secUpdateAt    DateTime?  @db.DateTime(0)
  secDeleted     Int        @default(0) @db.SmallInt
  secName        String     @db.VarChar(50)
  secDescription String     @db.VarChar(50)
  secComId       Int
  companys       companys   @relation(fields: [secComId], references: [comId], onDelete: NoAction, onUpdate: NoAction, map: "fk_Sections_companys1")
  products       products[]

  @@index([secComId], map: "fk_Sections_companys1_idx")
}

model actives {
  actId          Int       @id @default(autoincrement())
  actCreateAt    DateTime  @default(now()) @db.DateTime(0)
  actUpdateAt    DateTime? @db.DateTime(0)
  actDeleted     Int       @default(0) @db.SmallInt
  actCodigo      String?   @db.VarChar(500)
  actDescription String?   @db.VarChar(500)
  actComId       Int
  actKey         String    @unique(map: "actKey_UNIQUE") @db.VarChar(36)
  actCliId       Int?
  actMaintenice  Int       @default(0) @db.SmallInt
  clients        clients?  @relation(fields: [actCliId], references: [cliId], onDelete: NoAction, onUpdate: NoAction, map: "fk_actives_clients")
  companys       companys  @relation(fields: [actComId], references: [comId], onDelete: NoAction, onUpdate: NoAction, map: "fk_actives_companys1")

  @@index([actComId], map: "fk_actives_companys1_idx")
  @@index([actCliId], map: "fk_actives_clients_idx")
}

model clients {
  cliId        Int       @id @default(autoincrement())
  cliCreatedAt DateTime  @default(now()) @db.DateTime(0)
  cliUpdatedAt DateTime? @db.DateTime(0)
  cliDeleted   Int       @default(0) @db.SmallInt
  cliFirstName String
  cliLastName  String
  cliEmail     String
  cliPhone     String
  cliComId     Int
  cliKey       String    @unique(map: "cliKey_UNIQUE") @db.VarChar(36)
  cliRutId     Int?
  actives      actives[]
  companys     companys  @relation(fields: [cliComId], references: [comId], onDelete: NoAction, onUpdate: NoAction, map: "fk_clients_companys1")
  rutes        rutes?    @relation(fields: [cliRutId], references: [rutId], onDelete: NoAction, onUpdate: NoAction, map: "fk_clients_rutes1")

  @@index([cliComId], map: "fk_clients_companys1_idx")
  @@index([cliRutId], map: "fk_clients_rutes1_idx")
}

model companys {
  comId        Int         @id @default(autoincrement())
  comCreatedAt DateTime    @default(now()) @db.DateTime(0)
  comUpdatedAt DateTime?   @db.DateTime(0)
  comDeleted   Int         @default(0) @db.SmallInt
  comName      String
  comPhone     String?
  comAddress   String?
  comKey       String      @unique(map: "comKey_UNIQUE") @db.VarChar(36)
  Sections     Sections[]
  actives      actives[]
  clients      clients[]
  employees    employees[]
  payments     payments[]
  products     products[]
  providers    providers[]
  purchases    purchases[]
  rutes        rutes[]
  sales        sales[]
  users        users[]
}

model employees {
  empId        Int       @id @default(autoincrement())
  empCreatedAt DateTime  @default(now()) @db.DateTime(0)
  empUpdatedAt DateTime? @db.DateTime(0)
  empDeleted   Int       @default(0) @db.SmallInt
  empFirstName String
  empLastName  String
  empEmail     String
  empPhone     String
  empSalary    Float     @default(0)
  empComId     Int
  empKey       String    @unique(map: "empKey_UNIQUE") @db.VarChar(36)
  companys     companys  @relation(fields: [empComId], references: [comId], onDelete: NoAction, onUpdate: NoAction, map: "fk_employees_companys1")

  @@index([empComId], map: "fk_employees_companys1_idx")
}

model payments {
  payId       Int       @id @default(autoincrement())
  paySalId    Int
  payDate     DateTime  @default(now()) @db.DateTime(0)
  payMount    Float     @default(0)
  payCreateAt DateTime  @default(now()) @db.DateTime(0)
  payUpdateAt DateTime? @db.DateTime(0)
  payKey      String    @unique(map: "payKey_UNIQUE") @db.VarChar(36)
  payDeleted  Int       @default(0) @db.SmallInt
  payComId    Int
  companys    companys  @relation(fields: [payComId], references: [comId], onDelete: NoAction, onUpdate: NoAction, map: "fk_payments_companys1")
  sales       sales     @relation(fields: [paySalId], references: [salId], onDelete: NoAction, onUpdate: NoAction, map: "fk_payments_sales1")

  @@index([payComId], map: "fk_payments_companys1_idx")
  @@index([paySalId], map: "fk_payments_sales1_idx")
}

model products {
  proId            Int       @id @default(autoincrement())
  procreatedAt     DateTime  @default(now()) @db.DateTime(0)
  proUpdatedAt     DateTime? @db.DateTime(0)
  proDeleted       Int       @default(0) @db.SmallInt
  proDescription   String
  proPriceSales    Float     @default(0)
  proPricePurchase Float     @default(0)
  proImage         String?
  proComId         Int
  proStock         Float     @default(0)
  proKey           String    @unique(map: "proKey_UNIQUE") @db.VarChar(36)
  proSecId         Int
  Sections         Sections  @relation(fields: [proSecId], references: [secId], onDelete: NoAction, onUpdate: NoAction, map: "fk_products_Sections1")
  companys         companys  @relation(fields: [proComId], references: [comId], onDelete: NoAction, onUpdate: NoAction, map: "fk_products_companys1")

  @@index([proSecId], map: "fk_products_Sections1_idx")
  @@index([proComId], map: "fk_products_companys1_idx")
}

model productxsupliers {
  pxsId    Int    @id @default(autoincrement())
  pxsProId Int
  pxsSupId Int
  pxsKey   String @unique(map: "pxsKey_UNIQUE") @db.VarChar(36)
}

model providers {
  prvId        Int         @id @default(autoincrement())
  prvCreatedAt DateTime    @default(now()) @db.DateTime(0)
  prvUpdatedAt DateTime?   @db.DateTime(0)
  prvDeleted   Int         @default(0) @db.SmallInt
  prvName      String
  prvPhone     String
  prvAddress   String
  prvImage     String
  prvComId     Int
  prvKey       String      @unique(map: "prvKey_UNIQUE") @db.VarChar(36)
  companys     companys    @relation(fields: [prvComId], references: [comId], onDelete: NoAction, onUpdate: NoAction, map: "fk_providers_companys")
  purchases    purchases[]

  @@index([prvComId], map: "fk_providers_companys_idx")
}

model purchases {
  purId            Int                @id @default(autoincrement())
  purCreatedAt     DateTime           @default(now()) @db.DateTime(0)
  purUpdatedAt     DateTime?          @db.DateTime(0)
  purDeleted       Int                @default(0) @db.SmallInt
  purDate          DateTime           @default(now()) @db.DateTime(0)
  purTotal         Float              @default(0)
  purComId         Int
  purClose         Int                @default(0) @db.SmallInt
  purUseId         Int
  purPrvId         Int
  purKey           String             @unique(map: "purKey_UNIQUE") @db.VarChar(36)
  purNumber        String?            @db.Char(10)
  providers        providers          @relation(fields: [purPrvId], references: [prvId], onDelete: NoAction, onUpdate: NoAction, map: "fk_purchase_provider")
  companys         companys           @relation(fields: [purComId], references: [comId], onDelete: NoAction, onUpdate: NoAction, map: "fk_purchases_companys1")
  purchasesdetails purchasesdetails[]

  @@index([purComId], map: "fk_purchases_companys1_idx")
  @@index([purPrvId], map: "fk_purchase_provider_idx")
}

model purchasesdetails {
  pudId              Int       @id @default(autoincrement())
  pudCreatedAt       DateTime  @default(now()) @db.DateTime(0)
  pudUpdatedAt       DateTime? @db.DateTime(0)
  pudDeleted         Int       @default(0) @db.SmallInt
  pudProdId          Int
  pudProdDescription String
  pudProdCount       Float     @default(0)
  pudUseId           Int
  pudPurId           Int
  pudProdPrice       Float     @default(0)
  pudLastItem        Int       @default(0) @db.SmallInt
  pudSubTotal        Float     @default(0)
  pudKey             String    @unique(map: "pudKey_UNIQUE") @db.VarChar(36)
  purchases          purchases @relation(fields: [pudPurId], references: [purId], onDelete: NoAction, onUpdate: NoAction, map: "fk_purchasesdetails_purchases1")

  @@index([pudPurId], map: "fk_purchasesdetails_purchases1_idx")
}

model rutes {
  rutId          Int       @id @default(autoincrement())
  rutCreatedAt   DateTime  @default(now()) @db.DateTime(0)
  rutUpdatedAt   DateTime? @db.DateTime(0)
  rutDeleted     Int       @default(0) @db.SmallInt
  rutName        String    @db.VarChar(50)
  rutDescription String    @db.VarChar(50)
  rutKey         String    @unique(map: "rutKey_UNIQUE") @db.VarChar(36)
  rutComId       Int?
  clients        clients[]
  companys       companys? @relation(fields: [rutComId], references: [comId], onDelete: NoAction, onUpdate: NoAction, map: "fk_rutes_companys1")

  @@index([rutComId], map: "fk_rutes_companys1_idx")
}

model sales {
  salId        Int            @id @default(autoincrement())
  salCreatedAt DateTime       @default(now()) @db.DateTime(0)
  salUpdatedAt DateTime?      @db.DateTime(0)
  salDeleted   Int            @default(0) @db.SmallInt
  salDate      DateTime       @default(now()) @db.DateTime(0)
  salTotal     Float          @default(0)
  salLiteral   String         @default("cero")
  salComId     Int
  salCliId     Int
  salClose     Int            @default(0) @db.SmallInt
  salUseId     Int
  salKey       String         @unique(map: "salKey_UNIQUE") @db.VarChar(36)
  salDescuento Float          @default(0)
  payments     payments[]
  companys     companys       @relation(fields: [salComId], references: [comId], onDelete: NoAction, onUpdate: NoAction, map: "fk_sales_companys1")
  salesdetails salesdetails[]

  @@index([salComId], map: "fk_sales_companys1_idx")
}

model salesdetails {
  sadId              Int       @id @default(autoincrement())
  sadCreatedAt       DateTime  @default(now()) @db.DateTime(0)
  sadUpdatedAt       DateTime? @db.DateTime(0)
  sadDeleted         Int       @default(0) @db.SmallInt
  sadProdId          Int
  sadProdDescription String
  sadProdPrice       Float     @default(0)
  sadProdCount       Float     @default(0)
  sadUseId           Int
  sadSalId           Int
  salLastItem        Int       @default(0) @db.SmallInt
  sadSubTotal        Float     @default(0)
  sadKey             String    @unique(map: "sadKey_UNIQUE") @db.VarChar(36)
  sadProdKey         String    @default("\"-\"") @db.VarChar(45)
  sales              sales     @relation(fields: [sadSalId], references: [salId], onDelete: NoAction, onUpdate: NoAction, map: "fk_salesdetails_sales1")

  @@index([sadSalId], map: "fk_salesdetails_sales1_idx")
}

model users {
  useId        Int       @id @default(autoincrement())
  useCreatedAt DateTime  @default(now()) @db.DateTime(0)
  useUpdatedAt DateTime? @db.DateTime(0)
  useDeleted   Int       @default(0) @db.SmallInt
  useName      String
  usePassword  String
  useEmail     String
  useComId     Int
  useKey       String    @unique(map: "useKey_UNIQUE") @db.VarChar(36)
  companys     companys  @relation(fields: [useComId], references: [comId], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_companys1")

  @@index([useComId], map: "fk_users_companys1_idx")
}

view clientsview {
  cliId        Int       @unique @default(0)
  cliCreatedAt DateTime  @default(now()) @db.DateTime(0)
  cliUpdatedAt DateTime? @db.DateTime(0)
  cliDeleted   Int       @default(0) @db.SmallInt
  cliFirstName String
  cliLastName  String
  cliEmail     String
  cliPhone     String
  cliComId     Int
  cliKey       String    @db.VarChar(36)
  cliRutId     Int?
  deuda        Int?
}

view salesview {
  salId         Int       @unique @default(0)
  salCreatedAt  DateTime  @default(now()) @db.DateTime(0)
  salUpdatedAt  DateTime? @db.DateTime(0)
  salDeleted    Int       @default(0) @db.SmallInt
  salDate       DateTime  @default(now()) @db.DateTime(0)
  salLiteral    String    @default("cero")
  salComId      Int
  salCliId      Int
  salClose      Int       @default(0) @db.SmallInt
  salUseId      Int
  salKey        String    @db.VarChar(36)
  salDescuento  Float     @default(0)
  total         Int?
  totalDesc     Int?
  totalWithDesc BigInt?
  totalPayment  Int?
  due           BigInt?
  cliFirstName  String
  cliLastName   String
  cliKey        String    @db.VarChar(36)
  rutName       String    @db.VarChar(50)
}
